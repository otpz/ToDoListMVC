// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListMVC.Data.Context;

#nullable disable

namespace ToDoListMVC.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240602095055_Inital")]
    partial class Inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListMVC.Entity.Entities.TaskJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TaskJobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 6, 2, 12, 50, 55, 84, DateTimeKind.Local).AddTicks(9479),
                            Description = "Elektrik Makinaları 2 ödevi var.",
                            IsActive = true,
                            IsDeleted = false,
                            Priority = 1,
                            Title = "Ödevi Yap"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 6, 2, 12, 50, 55, 84, DateTimeKind.Local).AddTicks(9482),
                            Description = "Son haftanın staj defterinde eksikler var.",
                            IsActive = true,
                            IsDeleted = false,
                            Priority = 2,
                            Title = "Staj defterini tamamla"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 6, 2, 12, 50, 55, 84, DateTimeKind.Local).AddTicks(9484),
                            Description = "OBS'den bir mesaj gelebilir.",
                            IsActive = true,
                            IsDeleted = false,
                            Priority = 3,
                            Title = "OBS'yi kontrol et"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
